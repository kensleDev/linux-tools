#!/bin/bash

# Paths

HOME=/home/$USER
REPO=$HOME/repos/server-tools
DOTFILES=$REPO/dotfiles


# Funcs

# --------------------------------------- MENU FUNCS

  function PRINT_DIR () {
    # API | $1 = DIR "

    dflist=(`ls -a ${1}`)
    unset dflist[1]

    INDEX=0
    for file in "${dflist[@]}"; do
      if [ $INDEX != 0 ]; then 
        echo "$INDEX $file"
      fi
      let INDEX=${INDEX}+1
    done

  }

  function PRINT_MENU () {
    # API | $1 = Menu , $2 = Menu Array 

    clear
    
    MENU_TITLE $1
    MENU_ARR=( "$@" )
    unset MENU_ARR[0]

    INDEX=1
    for file in "${MENU_ARR[@]}"; do
      echo "$INDEX $file"
      let INDEX=${INDEX}+1
    done
    echo ""

  }

  function MENU_TITLE () {

    echo ""
    echo "#============================"
    echo "# ${1}" 
    echo "#============================"
    echo ""

  }


# --------------------------------------- GIT FUNCS

function GI() {
  # API | $1 = repo dir

  MENU_ARR=("Push" "Pull")
  PRINT_MENU "GitCommand" "${MENU_ARR[@]}"

  if [ ! -z "$1" ]; then 
    read -p "Repo Dir: " DIR_CHOICE
  else
    DIR_CHOICE="$(pwd)"
  fi 
  
  read -p "Choice: " MENU_CHOICE
  GIT_WRAPPER "$MENU_CHOICE" $DIR_CHOICE 
 
}

function GIT_WRAPPER () {
  # API | $1 Menu Choice, $2 DIR
  # Check if the dir is a repo and execute command

  DIR_CHOICE=$2

  cd $DIR_CHOICE

  if [ -d ".git" ]; then

    if [ $1 == 1 ]; then
      GIT_PUSH
    elif [$1 == 2];then
      GIT_PULL
    fi

  else 
    echo "This is not a git repo"
  fi

}

function GIT_PUSH () {

  read -p "Commit Message: " COMMIT_MESSAGE
  
  git add -A
  git commit -m "$COMMIT_MESSAGE"
  git push

  echo ""
  echo "|Push|>--- "$(readlink -f "$0")" ---> Cloud ---<||"
}

function GITPULL () {

  git pull && 
  echo ""
  echo "|Pull|>--- Cloud ---> "$(readlink -f "$0")" ---<||"

}


# --------------------------------------- GENERAL FUNCS

  function SERVER_INIT () {

    MENU_ARR=("VPS" "DockerVPS")
    PRINT_MENU "ServerInit" "${MENU_ARR[@]}"

    read -p "Choice: " VPS_CHOICE

    if [ "$VPS_CHOICE" == "1" ]; then
      sudo bash ./scripts/firstrun
    elif [ "$VPS_CHOICE" == "2" ]; then
      sudo bash ./scripts/firstDocker
    fi

  }
