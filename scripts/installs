
# ------------------------------------------------------ FUNCS

 
  function APP_INSTALLS () {
   
    if [ $1 = "zsh" ]; then 
      ZSH
    elif [ $1 = "fzf" ]; then
      FZF
    elif [ $1 = "nvm" ]; then
      NVM
    elif [ $1 = "aliases" ]; then
      ALIASES
    elif [ $1 = "tmux" ]; then
      TMUX        
    elif [ $1 = "vim" ]; then
      VIM
    elif [ $1 = "docker" ]; then
      DOCKER
    elif [ $1 = "azureFuncs" ]; then
      AZURE_FUNCTIONS
    fi 
  }


  function DISPLAY_LOG () {  

    if [ ${#INSTALL_LOG[@]} -eq 0 ]; then
      echo ""
      echo "No Apps installed"

    else

      MENU_TITLE "Installed Apps"

      echo ""
      for file in "${INSTALL_LOG[@]}"; do
        echo "Installed: $file "
      done

    fi   

  }   

  # -------------------------------------------------- APPS
    
  function ALIASES () {
    
    cp -r $DOTFILES/.aliases $HOME

    INSTALL_LOG+=("aliases")

  }


  function ZSH () {

    sudo apt-get install zsh -y &&

    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sed 's:env zsh::g' | sed 's:chsh -s .*$::g')"

    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

    cp -f $DOTFILES/.zshrc $HOME

    INSTALL_LOG+=("zsh")
 
  }

  function FZF () {
 
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install

    INSTALL_LOG+=("fzf")

  }

  function NVM () {

    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash &&
    nvm install node &&    
    npm i -g nodemon

    INSTALL_LOG+=("node")
 
  }

  function FONTS () {
     
    sudo apt-get install fontconfig
    mkdir ~/.fonts
   
    INSTALL_LOG+=("fonts")
  }


  #  

  function TMUX () {
    
    sudo apt-get install tmux || FAILED_LOG+=("tmux") && 
    cp -f $DOTFILES/.tmux.conf $HOME

    INSTALL_LOG+=("tmux")

  }

  function VIM () {

    sudo apt-get update
    sudo apt-get install vim
    cd ~/.vim && git clone git@bitbucket.org:kensledev/vimrc.git

    rm ~/.vimrc
    touch ~/.vimrc
    echo "source ~/.vim/vimrc/index"

    INSTALL_LOG+=("vim")

  }

  function DOCKER () {

    # docker
    sudo apt-get remove docker docker-engine docker.io
    sudo apt-get update
    sudo apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        software-properties-common

    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo apt-key fingerprint 0EBFCD88

    sudo add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
       $(lsb_release -cs) \
       stable"

    sudo apt-get update
    sudo apt-get install -y docker-ce=17.09.0
    sudo apt-get install -y docker-compose

    INSTALL_LOG+=("docker")
    INSTALL_LOG+=("docker compose")
  }

  function DOTNET () {
    wget http://ftp.us.debian.org/debian/pool/main/i/icu/libicu57_57.1-6+deb9u2_amd64.deb
    sudo dpkg -i libicu57_57.1-6+deb9u2_amd64.deb 

    wget http://mirrors.kernel.org/ubuntu/pool/main/i/icu/libicu60_60.2-6ubuntu1_amd64.deb
    sudo dpkg -i libicu60_60.2-6ubuntu1_amd64.deb

    sudo apt-get update

    sudo apt-get install dotnet-sdk-2.1
    INSTALL_LOG+=("dotnet")

  }

  function AZURE_FUNCTIONS() {
    DOTNET
    wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo apt-get update
    sudo apt-get install azure-functions-core-tools
    INSTALL_LOG+=("azure functions")

  }

# ----

